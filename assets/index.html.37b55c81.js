import{_ as e,r as c,o as u,c as l,a as s,b as n,d as t,w as p,e as o}from"./app.b8d27d59.js";const k={},i=o('<h2 id="vue-diff-\u6F14\u7B97\u6CD5" tabindex="-1"><a class="header-anchor" href="#vue-diff-\u6F14\u7B97\u6CD5" aria-hidden="true">#</a> Vue diff \u6F14\u7B97\u6CD5</h2><p><a href="https://github.com/vuejs/vue/blob/dev/src/core/vdom/patch.js" target="_blank" rel="noopener noreferrer">source code</a></p><h3 id="\u8AAA\u660E" tabindex="-1"><a class="header-anchor" href="#\u8AAA\u660E" aria-hidden="true">#</a> \u8AAA\u660E</h3>',3),d=s("li",null,[s("p",null,"\u63A1\u7528 \u96D9\u6307\u9488 \u7684\u7B56\u7565\u53EF\u4EE5\u5728\u4E0D\u9700\u8981\u904D\u6B77\u6574\u500B\u6A39\u7684\u60C5\u6CC1\u4E0B\uFF0C\u5C31\u5730\u66F4\u65B0 DOM\uFF0C\u4EE5\u63D0\u9AD8\u6027\u80FD\u3002\u907F\u514D\u4E86\u4E0D\u5FC5\u8981\u7684 DOM \u64CD\u4F5C\u3002(\u4E3B\u8981\u6A39\u7BC0\u9EDE patchFlag \u82E5\u76F8\u540C, \u4EE3\u8868\u4E0B\u65B9\u7BC0\u9EDE\u5C31\u4E0D\u7528\u518D\u66F4\u65B0)")],-1),r=s("p",null,"\u5176\u6709\u5169\u500B\u7279\u9EDE\uFF1A",-1),m=s("h3",{id:"\u89E3\u6790\u6D41\u7A0B",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#\u89E3\u6790\u6D41\u7A0B","aria-hidden":"true"},"#"),n(" \u89E3\u6790\u6D41\u7A0B")],-1),f=s("p",null,"\u4E3B\u8981\u7531\u4E09\u500B\u51FD\u6578\u5D4C\u5957\u7D44\u6210\uFF1A",-1),h=o(`<p>\u6700\u7D42\u7D93\u904E\u4E0A\u8FF0\u5404\u9805\u66F4\u65B0\u8FD4\u56DE\u639B\u4E0A\u9264\u5B50\u51FD\u6578\u7684\u5BE6\u9AD4 DOM\u3002</p><h3 id="\u904B\u4F5C\u539F\u7406" tabindex="-1"><a class="header-anchor" href="#\u904B\u4F5C\u539F\u7406" aria-hidden="true">#</a> \u904B\u4F5C\u539F\u7406</h3><ul><li>\u7576\u8CC7\u6599\u6539\u8B8A\u6642\uFF0Cset \u65B9\u6CD5\u6703\u89F8\u767C\u76F8\u95DC\u7684 Dep\uFF08Dependency\uFF09\u5C0D\u8C61\u7684 notify \u65B9\u6CD5\u3002Dep \u5C0D\u8C61\u7528\u65BC\u8DDF\u8E64\u4F9D\u8CF4\u65BC\u8A72\u8CC7\u6599\u7684\u6240\u6709 Watcher \u5BE6\u4F8B\u3002</li><li>Dep.notify \u6703\u904D\u6B77\u6240\u6709\u4F9D\u8CF4\uFF08Watcher\uFF09\u4E26\u547C\u53EB\u5B83\u5011\u7684\u66F4\u65B0\u65B9\u6CD5\u3002\u9019\u4E9B Watcher \u5BE6\u4F8B\u662F\u8CC7\u6599\u8B8A\u5316\u6642\u9700\u8981\u91CD\u65B0\u57F7\u884C\u7684\u4EE3\u78BC\u584A\uFF0C\u901A\u5E38\u662F\u6E32\u67D3\u8996\u5716\u7684 Watcher \u6216\u5176\u4ED6\u81EA\u5B9A\u7FA9\u7684 Watcher\u3002</li><li>\u8207\u6E32\u67D3\u8996\u5716\u76F8\u95DC\u7684 Watcher \u6703\u5C0D\u5BE6\u969B DOM \u8ABF\u7528 patch \u51FD\u6578\uFF0Cpatch \u8CA0\u8CAC\u5C07\u865B\u64EC DOM \u8207\u5BE6\u969B DOM \u540C\u6B65\u5DF2\u66F4\u65B0\u8CC7\u6599\u8DDF\u6E32\u67D3\u8996\u5716\u3002</li><li>\u6BD4\u8F03\u65B9\u5F0F\u70BA\u5728\u65B0\u820A vnode \u4E2D\u540C\u6642\u4F7F\u7528\u5169\u500B\u6307\u91DD\u5F9E\u982D\u5C3E\u958B\u59CB\u5411\u4E2D\u9593\u9760\u8FD1\uFF0C \u901A\u904E\u52D5\u614B\u898F\u5283\u7684\u65B9\u5F0F\u8A08\u7B97\u51FA\u66F4\u65B0\u904E\u5F8C\u7684 vnode, \u5728\u4EE5\u6B64 vnode \u6E32\u67D3\u6210 \u771F\u5BE6 DOM\u3002</li><li>\u512A\u9EDE\uFF1A <ol><li>\u65B0\u820A vnode \u7684\u982D\u5C3E\u6307\u91DD\u6BD4\u8F03\uFF0C\u53EF\u4EE5\u6700\u5927\u7A0B\u5EA6\u5730\u91CD\u8907\u4F7F\u7528\u5DF2\u6709\u7684 DOM \u7BC0\u9EDE\u3002</li><li>Key \u7684\u6BD4\u8F03\uFF1A\u5982\u679C\u5B58\u5728 key\uFF0CVue \u6703\u6839\u64DA key \u4F86\u5C0B\u627E\u76F8\u540C key \u7684 vnode\uFF0C\u4EE5\u9032\u884C\u5C40\u90E8\u66F4\u65B0\u3002 Vue3 \u5247\u65B0\u589E patchFlags \u4F86\u6A19\u793A Vnode \u9032\u884C\u512A\u5316\u6BD4\u8F03\u3002</li><li>\u512A\u5316\u7684\u6BD4\u8F03\u7B56\u7565\uFF1AVue \u6703\u9032\u884C\u4E00\u4E9B\u512A\u5316\u7684\u6BD4\u8F03\u7B56\u7565\uFF0C\u4F8B\u5982\u5224\u65B7\u662F\u5426\u70BA\u76F8\u540C\u7684\u5167\u5EFA\u7D44\u4EF6\u3001\u662F\u5426\u70BA\u76F8\u540C\u985E\u578B\u7684 HTML \u6A19\u7C64\u7B49\u3002</li></ol></li></ul><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * patch \u4F5C\u7528\uFF1A \u7576\u8CC7\u6599\u6539\u8B8A\u89F8\u767C patch \u6642\uFF0C\u6839\u64DA \u65B0\u820A\u7BC0\u9EDE \u5B58\u5728\u8207\u5426\u4EE5\u53CA\u5339\u914D\u72C0\u6CC1\uFF0C\u6700\u7D42\u8FD4\u56DE\u6620\u5C04\u904E\u7684\u5BE6\u9AD4 DOM\u3002
 * patch \u6D41\u7A0B\uFF1A
 *         (1) \u6C92\u6709\u65B0\u7BC0\u9EDE\uFF0C\u6709\u820A\u7BC0\u9EDE\uFF1A\u820A\u7BC0\u9EDE\u6E05\u9664\u9264\u5B50\u51FD\u6578\u5C07\u8CC7\u6599\u91CD\u7F6E\u3002(\u907F\u514D memory leak, side effect)
 *         (2) \u6C92\u6709\u820A\u7BC0\u9EDE\uFF0C\u6709\u65B0\u7BC0\u9EDE\uFF1A\u4EE3\u8868\u7BC0\u9EDE\u521D\u59CB\u5316\uFF0C\u76F4\u63A5\u4F7F\u7528\u65B0\u7684 vnode \u751F\u6210\u5C0D\u61C9\u7684\u771F\u5BE6 DOM\u3002
 *         (3) \u65B0\u820A\u7BC0\u9EDE\u90FD\u662F \u865B\u64EC DOM\uFF1A\u57F7\u884C patchVnode \u5411\u5B50\u7BC0\u9EDE\u9032\u4E00\u6B65\u6AA2\u67E5\u9700\u8981\u66F4\u65B0\u7684\u9805\u76EE\u3002
 *         (4) oldVnode \u662F\u771F\u5BE6 DOM\uFF0C\u820A\u7BC0\u9EDE\u70BA\u865B\u64EC DOM \u6642\uFF1A\u9032\u884C hydration\uFF0C
 *             hydration \u82E5\u6210\u529F\u4EE3\u8868 \u771F\u5BE6 DOM &amp; vnode \u865B\u64EC\u7BC0\u9EDE\u6210\u529F\u5339\u914D\uFF0C\u6700\u7D42\u639B\u4E0A\u9264\u5B50\u8FD4\u56DE oldVnode \u771F\u5BE6 DOM\u3002
 *         (5) \u66FF\u6B65\u9A5F 2 &amp; 4 \u5229\u7528 vnode \u751F\u6210\u7684\u5BE6\u9AD4 DOM \u63D2\u4E0A\u9264\u5B50\u51FD\u6578\uFF0C\u6700\u7D42\u8FD4\u56DE vnode \u865B\u64EC DOM \u751F\u6210\u7684\u5BE6\u9AD4 DOM\u3002
 *
 * \u6BD4\u8F03\u597D\u8A18\u7684\u65B9\u5F0F\uFF1A
 *         (1) \u6709\u820A\u7684\u6C92\u65B0\u7684, \u6E05\u9664\u9264\u5B50
 *         (2) \u6709\u65B0\u7684\u6C92\u820A\u7684, \u5EFA\u7ACB\u65B0\u5BE6\u9AD4 DOM
 *         (3) \u6709\u820A\u6709\u65B0\u90FD\u70BA\u865B\u64EC DOM, \u4F7F\u7528 patchVnode \u5411\u4E0B\u770B\u5B50\u7BC0\u9EDE\u8981\u66F4\u65B0\u6587\u672C\u6216\u662F\u66F4\u6DF1\u7684\u5B50\u7BC0\u9EDE
 *         (4) \u6709\u820A\u6709\u65B0\u4F46\u820A\u7684\u662F\u5BE6\u9AD4 DOM \u65B0\u7684\u662F\u865B\u64EC\u7BC0\u9EDE, \u9032\u884C hydration\uFF0C\u6210\u529F\u76F4\u63A5\u8FD4\u56DE\u639B\u4E0A\u9264\u5B50\u7684\u820A\u5BE6\u9AD4 DOM,
 *             \u5931\u6557\u5247\u7528\u65B0\u865B\u64EC\u7BC0\u9EDE\u5275\u5EFA\u5BE6\u9AD4 DOM \u4E26\u5957\u7528\u90E8\u5206 \u820A\u7684\u5BE6\u9AD4 DOM \u7684 \u7236\u7BC0\u9EDE\u8CC7\u8A0A\u3002
 *         (5) \u66FF\u6B65\u9A5F 2 &amp; 4 \u5931\u6557\u6642\u5275\u5EFA\u7684\u5BE6\u9AD4 DOM \u639B\u4E0A\u9264\u5B50\u51FD\u6578\u3002
 *
 * \u88DC\uFF1Ahydration \u7684\u76EE\u7684\u662F\u5C07\u4F3A\u670D\u5668\u7AEF\u751F\u6210\u7684\u975C\u614B HTML \u8F49\u63DB\u70BA\u5177\u6709\u52D5\u614B\u884C\u70BA\u7684\u5BA2\u6236\u7AEF\u61C9\u7528\u7A0B\u5F0F\u3002
 *    \u5373\u5C07 HTML \u5957\u4E0A JS \u65B9\u53EF\u9032\u884C\u4EA4\u4E92
 */</span>

<span class="token keyword">function</span> <span class="token function">patch</span><span class="token punctuation">(</span><span class="token parameter">oldVnode<span class="token punctuation">,</span> vnode<span class="token punctuation">,</span> hydrating<span class="token punctuation">,</span> removeOnly</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// 1. \u6C92\u6709 \u65B0\u7BC0\u9EDE\uFF0C\u76F4\u63A5\u89F8\u767C\u820A\u7BC0\u9EDE\u7684 destory \u9264\u5B50\uFF0C\u57F7\u884C\u4E00\u4E9B\u92B7\u6BC0\u7D44\u4EF6\u6642\u7684\u6E05\u7406\u5DE5\u4F5C\u3002</span>
  <span class="token comment">//    \u7C21\u55AE\u4F86\u8AAA\u56E0\u70BA\u8CC7\u6599\u66F4\u65B0\u624D\u89F8\u767C patch\uFF0C\u4F46\u7BC0\u9EDE\u537B\u6C92\u6709\u6539\u52D5(\u6C92\u6709\u7522\u751F\u65B0\u7BC0\u9EDE)\uFF0C\u9700\u8981\u6E05\u9664\u820A\u7BC0\u9EDE\u7684\u9264\u5B50\u5C07\u8CC7\u6599\u91CD\u7F6E\u3002</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isUndef</span><span class="token punctuation">(</span>vnode<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isDef</span><span class="token punctuation">(</span>oldVnode<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token function">invokeDestroyHook</span><span class="token punctuation">(</span>oldVnode<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span><span class="token punctuation">;</span> <span class="token comment">// \u82E5\u4E0D\u5B58\u5728 oldVnode, \u5247\u4E0D\u9700\u8981\u57F7\u884C\u5176\u4ED6\u7684 patch \u908F\u8F2F\uFF0C\u76F4\u63A5\u7D50\u675F\u51FD\u6578\u3002</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">let</span> isInitialPatch <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> insertedVnodeQueue <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token comment">// 2. \u6709 \u65B0\u7BC0\u9EDE \u4F46\u6C92\u6709 \u820A\u7BC0\u9EDE\uFF0C\u4EE3\u8868\u9801\u9762\u662F\u525B\u521D\u59CB\u5316\u671F\u9593\uFF0C\u6240\u4EE5\u4E0D\u6BD4\u8F03\uFF0C\u76F4\u63A5\u7528 \u65B0\u7BC0\u9EDE \u751F\u6210 DOM \u5143\u7D20</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isUndef</span><span class="token punctuation">(</span>oldVnode<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// empty mount (likely as component), create new root element</span>
    isInitialPatch <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token function">createElm</span><span class="token punctuation">(</span>vnode<span class="token punctuation">,</span> insertedVnodeQueue<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span> <span class="token comment">// \u540C\u6642\u6709 \u65B0\u820A\u7BC0\u9EDE</span>
    <span class="token keyword">const</span> isRealElement <span class="token operator">=</span> <span class="token function">isDef</span><span class="token punctuation">(</span>oldVnode<span class="token punctuation">.</span>nodeType<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u6AA2\u67E5 oldVnode \u662F\u5426\u70BA\u771F\u5BE6\u5143\u7D20\uFF08\u5373 DOM \u5143\u7D20\uFF09\uFF0C\u5982\u679C oldVnode \u662F\u771F\u5BE6\u5143\u7D20\uFF0C\u5247\u8868\u793A\u5B83\u4E0D\u662F\u7531 Vue.js \u7BA1\u7406\u7684\u865B\u64EC\u7BC0\u9EDE\uFF0C\u800C\u662F\u7531\u5916\u90E8\u7684\u771F\u5BE6 DOM \u5143\u7D20\u3002</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>isRealElement <span class="token operator">&amp;&amp;</span> <span class="token function">sameVnode</span><span class="token punctuation">(</span>oldVnode<span class="token punctuation">,</span> vnode<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// 3. \u5982\u679C oldVnode \u4E0D\u662F\u771F\u5BE6 DOM, \u65B0\u820A\u7BC0\u9EDE\u7684 vnode \u53C8\u4E00\u6A23\u7684\u8A71\uFF0C\u4EE3\u8868\u53EF\u4EE5\u9032\u884C patchVnode \u4F86\u66F4\u65B0\u7BC0\u9EDE\u3002</span>
      <span class="token function">patchVnode</span><span class="token punctuation">(</span>oldVnode<span class="token punctuation">,</span> vnode<span class="token punctuation">,</span> insertedVnodeQueue<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> removeOnly<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token comment">// 4. oldVnode \u662F\u5BE6\u9AD4 DOM\uFF0C\u53C8\u820A\u7BC0\u9EDE\u548C\u65B0\u7BC0\u9EDE\u4E0D\u4E00\u6A23\u6642\uFF0C\u5EFA\u7ACB\u65B0\u7BC0\u9EDE\uFF0C\u522A\u9664\u820A\u7BC0\u9EDE (\u4E0B\u65B9 return vnode.elm)</span>
      <span class="token comment">// \u6B64\u8655\u8ABF\u7528 hidrate \u51FD\u6578\uFF0C\u5C07\u4F3A\u670D\u5668\u751F\u6210\u7684 HTML\uFF08oldVnode\uFF09\u548C Vue \u5BA2\u6236\u7AEF\u61C9\u7528\u7A0B\u5F0F\u7684\u865B\u64EC\u7BC0\u9EDE\uFF08vnode\uFF09\u9032\u884C\u7BC0\u9EDE\u5339\u914D\u3002</span>

      <span class="token keyword">if</span> <span class="token punctuation">(</span>isRealElement<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>oldVnode<span class="token punctuation">.</span>nodeType <span class="token operator">===</span> <span class="token number">1</span> <span class="token operator">&amp;&amp;</span> oldVnode<span class="token punctuation">.</span><span class="token function">hasAttribute</span><span class="token punctuation">(</span><span class="token constant">SSR_ATTR</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          oldVnode<span class="token punctuation">.</span><span class="token function">removeAttribute</span><span class="token punctuation">(</span><span class="token constant">SSR_ATTR</span><span class="token punctuation">)</span>
          hydrating <span class="token operator">=</span> <span class="token boolean">true</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isTrue</span><span class="token punctuation">(</span>hydrating<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">hydrate</span><span class="token punctuation">(</span>oldVnode<span class="token punctuation">,</span> vnode<span class="token punctuation">,</span> insertedVnodeQueue<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// \u5982\u679C hydrate \u6210\u529F</span>
            <span class="token function">invokeInsertHook</span><span class="token punctuation">(</span>vnode<span class="token punctuation">,</span> insertedVnodeQueue<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u89F8\u767C\u63D2\u5165\u9264\u5B50\u51FD\u6578\uFF0C\u8655\u7406\u63D2\u5165\u7BC0\u9EDE\u7684\u76F8\u95DC\u908F\u8F2F\u3002\u7B2C\u4E09\u500B\u53C3\u6578 true \u8868\u793A\u9019\u662F hydration \u968E\u6BB5\u3002</span>
            <span class="token keyword">return</span> oldVnode<span class="token punctuation">;</span> <span class="token comment">// \u8FD4\u56DE\u820A\u7BC0\u9EDE oldVnode\uFF0C\u8868\u793A hydration \u904E\u7A0B\u6210\u529F\uFF0C\u4E26\u7D50\u675F patch \u904E\u7A0B\u3002</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// \u8981\u561B\u4E0D\u662F\u4F3A\u670D\u5668\u6E32\u67D3\uFF0C\u8981\u561B hydration \u5931\u6557</span>
        <span class="token comment">// \u5275\u5EFA\u4E00\u500B\u7A7A\u7684\u7BC0\u9EDE\u53D6\u4EE3 oldVnode \u907F\u514D\u7A0B\u5F0F\u78BC\u5831\u932F</span>
        oldVnode <span class="token operator">=</span> <span class="token function">emptyNodeAt</span><span class="token punctuation">(</span>oldVnode<span class="token punctuation">)</span>
      <span class="token punctuation">}</span>

      <span class="token comment">// !! \u7576 hydration \u5931\u6557\uFF0C\u6293\u53D6\u90E8\u5206 oldVnode \u5BE6\u9AD4 DOM \u7684\u90E8\u5206\u8CC7\u6599\uFF0C\u7528 vnode \u4F86\u5275\u5EFA\u65B0\u7684\u5BE6\u9AD4 DOM \u53D6\u4EE3 oldVnode \u5BE6\u9AD4 DOM\uFF0C\u4E26\u4E14\u522A\u9664 oldVnode \u5BE6\u9AD4 DOM\u3002</span>
      <span class="token comment">// \u53D6\u4EE3\u5BE6\u9AD4\u5143\u7D20</span>
        <span class="token keyword">const</span> oldElm <span class="token operator">=</span> oldVnode<span class="token punctuation">.</span>elm
        <span class="token keyword">const</span> parentElm <span class="token operator">=</span> nodeOps<span class="token punctuation">.</span><span class="token function">parentNode</span><span class="token punctuation">(</span>oldElm<span class="token punctuation">)</span>

        <span class="token comment">// \u5229\u7528 vnode \u5275\u5EFA\u4E00\u500B\u5BE6\u9AD4 DOM\uFF0C\u7528\u4EE5\u53D6\u4EE3 oldVnode \u5BE6\u9AD4 DOM</span>
        <span class="token function">createElm</span><span class="token punctuation">(</span>
          vnode<span class="token punctuation">,</span>
          insertedVnodeQueue<span class="token punctuation">,</span>
          oldElm<span class="token punctuation">.</span>_leaveCb <span class="token operator">?</span> <span class="token keyword">null</span> <span class="token operator">:</span> parentElm<span class="token punctuation">,</span>
          nodeOps<span class="token punctuation">.</span><span class="token function">nextSibling</span><span class="token punctuation">(</span>oldElm<span class="token punctuation">)</span>
        <span class="token punctuation">)</span>

        <span class="token comment">// \u905E\u6B78\u66F4\u65B0\u7236\u7BC0\u9EDE\u4F54\u4F4D\u7B26\u7BC0\u9EDE\u5143\u7D20</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isDef</span><span class="token punctuation">(</span>vnode<span class="token punctuation">.</span>parent<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">let</span> ancestor <span class="token operator">=</span> vnode<span class="token punctuation">.</span>parent
          <span class="token keyword">const</span> patchable <span class="token operator">=</span> <span class="token function">isPatchable</span><span class="token punctuation">(</span>vnode<span class="token punctuation">)</span>
          <span class="token keyword">while</span> <span class="token punctuation">(</span>ancestor<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> cbs<span class="token punctuation">.</span>destroy<span class="token punctuation">.</span>length<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>
              cbs<span class="token punctuation">.</span>destroy<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">(</span>ancestor<span class="token punctuation">)</span>
            <span class="token punctuation">}</span>
            ancestor<span class="token punctuation">.</span>elm <span class="token operator">=</span> vnode<span class="token punctuation">.</span>elm
            <span class="token keyword">if</span> <span class="token punctuation">(</span>patchable<span class="token punctuation">)</span> <span class="token punctuation">{</span>
              <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> cbs<span class="token punctuation">.</span>create<span class="token punctuation">.</span>length<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                cbs<span class="token punctuation">.</span>create<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">(</span>emptyNode<span class="token punctuation">,</span> ancestor<span class="token punctuation">)</span>
              <span class="token punctuation">}</span>
              <span class="token keyword">const</span> insert <span class="token operator">=</span> ancestor<span class="token punctuation">.</span>data<span class="token punctuation">.</span>hook<span class="token punctuation">.</span>insert
              <span class="token keyword">if</span> <span class="token punctuation">(</span>insert<span class="token punctuation">.</span>merged<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> insert<span class="token punctuation">.</span>fns<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> insert<span class="token punctuation">.</span>fns<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
              <span class="token punctuation">}</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
              <span class="token function">registerRef</span><span class="token punctuation">(</span>ancestor<span class="token punctuation">)</span>
            <span class="token punctuation">}</span>
            ancestor <span class="token operator">=</span> ancestor<span class="token punctuation">.</span>parent
          <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>

        <span class="token comment">// \u92B7\u6BC0\u820A\u7BC0\u9EDE</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isDef</span><span class="token punctuation">(</span>parentElm<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token function">removeVnodes</span><span class="token punctuation">(</span><span class="token punctuation">[</span>oldVnode<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isDef</span><span class="token punctuation">(</span>oldVnode<span class="token punctuation">.</span>tag<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token function">invokeDestroyHook</span><span class="token punctuation">(</span>oldVnode<span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>

    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// 5. \u66FF\u6B65\u9A5F 2 \u65B0\u5275\u5EFA\u7684\u5BE6\u9AD4 DOM, \u4EE5\u53CA \u6B65\u9A5F 4 hydration \u5931\u6557\u800C\u7528 vnode \u65B0\u5EFA\u7ACB\u51FA\u4F86\u7684\u5BE6\u9AD4 DOM \u639B\u4E0A\u9264\u5B50\u51FD\u6578</span>
  <span class="token function">invokeInsertHook</span><span class="token punctuation">(</span>vnode<span class="token punctuation">,</span> insertedVnodeQueue<span class="token punctuation">,</span> isInitialPatch<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> vnode<span class="token punctuation">.</span>elm<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// p.s. invokeDestroyHook \u4F5C\u7528\u662F\u8ABF\u7528 vnode \u7684\u92B7\u6BC0\u9264\u5B50\u51FD\u6578\u4EE5\u53CA\u904D\u6B77\u5B50\u7BC0\u9EDE\u905E\u6B78\u5730\u8ABF\u7528\u92B7\u6BC0\u9264\u5B50\u51FD\u6578\u3002</span>
<span class="token comment">// \u5176\u4F5C\u7528\u5927\u81F4\u53EF\u5206\u6210\u5E7E\u9EDE</span>
<span class="token comment">// (1) \u6E05\u7406\u5B9A\u6642\u5668\u548C\u8A08\u6642\u5668(setTimeout, setInterval\u7B49...)\uFF0C\u9632\u6B62 memory leak\u3002</span>
<span class="token comment">// (2) \u89E3\u9664\u7D81\u5B9A\u4E8B\u4EF6\u76E3\u807D (\u89E3\u7ED1\u4E8B\u4EF6\u76D1\u542C\u5668)\uFF0C\u5728\u7D44\u4EF6\u751F\u547D\u5468\u671F\u4E2D\uFF0C\u53EF\u80FD\u900F\u904EaddEventListener \u6DFB\u52A0\u4E8B\u4EF6\u76E3\u807D\u5668\u3002</span>
<span class="token comment">//     \u92B7\u6BC0\u9264\u5B50\u51FD\u6578\u63D0\u4F9B\u4E86\u4E00\u500B\u6642\u6A5F\uFF0C\u53EF\u4EE5\u5728\u7D44\u4EF6\u92B7\u6BC0\u524D\u79FB\u9664\u9019\u4E9B\u4E8B\u4EF6\u76E3\u807D\u5668\uFF0C\u907F\u514D\u7D44\u4EF6\u5DF2\u7D93\u92B7\u6BC0\u4F46\u4ECD\u5B58\u5728\u4E8B\u4EF6\u76E3\u807D\u7684\u60C5\u6CC1\u3002</span>
<span class="token comment">// (3) \u53D6\u6D88\u7570\u6B65\u4EFB\u52D9\uFF1A \u5982\u679C\u7D44\u4EF6\u4E2D\u6709\u7570\u6B65\u4EFB\u52D9\uFF0C\u5982 AJAX \u8ACB\u6C42\u7B49\uFF0C\u92B7\u6BC0\u9264\u5B50\u51FD\u6578\u53EF\u4EE5\u7528\u65BC\u53D6\u6D88\u9019\u4E9B\u7570\u6B65\u4EFB\u52D9\uFF0C\u78BA\u4FDD\u5728\u7D44\u4EF6\u92B7\u6BC0\u524D\u5DF2\u5B8C\u6210\u6216\u53D6\u6D88\u3002</span>
<span class="token comment">// (4) \u6E05\u7406\u975E Vue \u5BE6\u4F8B\u7684\u8CC7\u6E90\uFF1A \u5728\u7D44\u4EF6\u4E2D\u53EF\u80FD\u4F7F\u7528\u4E86\u4E00\u4E9B\u975E Vue \u5BE6\u4F8B\u7BA1\u7406\u7684\u8CC7\u6E90\uFF0C</span>
<span class="token comment">//     \u5982\u624B\u52D5\u5275\u5EFA\u7684 DOM \u5143\u7D20\u3001WebSocket \u9023\u63A5\u7B49\u3002</span>
<span class="token comment">//     \u92B7\u6BC0\u9264\u5B50\u51FD\u6578\u4E00\u6A23\u63D0\u4F9B\u4E86\u4E00\u500B\u6642\u6A5F\uFF0C\u53EF\u4EE5\u5728\u7D44\u4EF6\u92B7\u6BC0\u524D\u9032\u884C\u6E05\u7406\u3002</span>
</code></pre></div><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * patchVnode \u51FD\u6578\u4F5C\u7528\uFF1A\u5305\u62EC\u4E86\u6AA2\u67E5\u975C\u614B\u7BC0\u9EDE\u3001\u52D5\u614B\u7BC0\u9EDE\u3001props\u3001\u4E8B\u4EF6\u7B49\uFF0C\u4EE5\u5224\u65B7 vdom \u8A72\u5982\u4F55\u66F4\u65B0\u3002
 * patchVnode \u6D41\u7A0B\uFF1A(1) \u627E\u51FA\u5169\u7BC0\u9EDE\u5C0D\u61C9\u7684\u771F\u5BE6 DOM\uFF0C\u6AA2\u67E5\u65B0\u7BC0\u9EDE\u662F\u5426\u70BA\u6587\u5B57\u7BC0\u9EDE\uFF0C\u5982\u679C\u662F\uFF0C
 *                     \u5247\u76F4\u63A5\u66F4\u65B0dom\u7684\u6587\u5B57\u5167\u5BB9\u70BA\u65B0\u7BC0\u9EDE\u7684\u6587\u5B57\u5167\u5BB9
 *                     \u5982\u679C\u4E0D\u662F\u5247\u57F7\u884C\u4E0B\u65B9\u6B65\u9A5F 2,3,4
 *                 (2) \u65B0\u7BC0\u9EDE\u5217\u8868\u548C\u820A\u7BC0\u9EDE\u5217\u8868\u90FD\u4E0D\u662F\u6587\u672C\u4E14\u5217\u8868\u9806\u5E8F\u4E0D\u540C\u6642\uFF0C\u5247\u547C\u53EB updateChildren \u9032\u884C\u7BC0\u9EDE\u5217\u8868\u7684\u6392\u5E8F\uFF0C\u65B0\u589E\u6216\u522A\u9664\u7B49\u64CD\u4F5C\u3002
 *                 (3) \u53EA\u6709\u65B0\u7BC0\u9EDE\u6709\u5B50\u7BC0\u9EDE\uFF0C\u820A\u7BC0\u9EDE\u6C92\u6709\uFF0C\u4EE3\u8868\u6240\u6709\u7BC0\u9EDE\u90FD\u662F\u5168\u65B0\u7684\uFF0C\u76F4\u63A5\u5168\u90E8\u65B0\u5EFA\uFF0C
 *                     \u65B0\u5EFA\u662F\u6307\u5275\u5EFA\u51FA\u6240\u6709\u65B0DOM\uFF0C\u4E26\u4E14\u52A0\u5165\u9032\u7236\u7BC0\u9EDE
 *                 (4) \u53EA\u6709\u820A\u7BC0\u9EDE\u6709\u5B50\u7BC0\u9EDE\u800C\u65B0\u7BC0\u9EDE\u6C92\u6709\uFF0C\u8AAA\u660E\u66F4\u65B0\u5F8C\u7684\u9801\u9762\uFF0C\u820A\u7BC0\u9EDE\u5168\u90E8\u90FD\u4E0D\u898B\u4E86\uFF0C
 *                     \u4EE3\u8868\u8981\u628A\u6240\u6709\u7684\u820A\u7BC0\u9EDE\u522A\u9664\uFF0C\u4E5F\u5C31\u662F\u76F4\u63A5\u628A DOM \u522A\u9664\u3002
 *
 * \u88DC\u5145\uFF1AVue3 \u591A\u65B0\u589E\u4E86\u975C\u614B\u6A19\u8A18 patchFlags \u4F86\u512A\u5316\u6548\u80FD\uFF0CpatchFlag \u662F\u7528\u4F86\u8868\u793A vnode \u7684\u5C6C\u6027\u548C\u5B50\u7BC0\u9EDE\u7684\u4E00\u500B\u6A19\u8A8C\uFF0C
 *      \u5B83\u53EF\u4EE5\u5C07\u539F\u529F\u80FD(\u6AA2\u67E5\u975C\u614B\u7BC0\u9EDE\u3001\u52D5\u614B\u7BC0\u9EDE\u3001props\u3001\u4E8B\u4EF6\u7B49\u4FE1\u606F\u5408\u4F75\u6210 patchFlags)\u7528\u4F86\u5224\u65B7 vnode \u662F\u5426\u9700\u9032\u884C\u66F4\u65B0\u3002
 *      \u7576\u65B0\u820A vnode \u7684 patchFlag \u76F8\u540C\u6642\uFF0C\u610F\u5473\u8457\u5B83\u5011\u7684\u5C6C\u6027\u548C\u5B50\u7BC0\u9EDE\u6C92\u6709\u767C\u751F\u8B8A\u5316\uFF0C\u56E0\u6B64\u53EF\u4EE5\u7BC0\u7701\u6548\u80FD\uFF0C
 *      \u4E0D\u9700\u8981\u9032\u884C\u9032\u4E00\u6B65\u7684 DOM \u64CD\u4F5C\u3002
 *
 */</span>

<span class="token keyword">function</span> <span class="token function">patchVnode</span><span class="token punctuation">(</span>
  <span class="token parameter">oldVnode<span class="token punctuation">,</span>
  vnode<span class="token punctuation">,</span>
  insertedVnodeQueue<span class="token punctuation">,</span>
  ownerArray<span class="token punctuation">,</span>
  index<span class="token punctuation">,</span>
  removeOnly</span>
<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>oldVnode <span class="token operator">===</span> vnode<span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span> <span class="token comment">// \u5982\u679C\u65B0\u820A\u7BC0\u9EDE\u4E00\u6A23\uFF0C\u4E0D\u7528\u8655\u7406\u76F4\u63A5 return</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isDef</span><span class="token punctuation">(</span>vnode<span class="token punctuation">.</span>elm<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token function">isDef</span><span class="token punctuation">(</span>ownerArray<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u514B\u9686\u91CD\u7528\u7684 vnode</span>
    vnode <span class="token operator">=</span> ownerArray<span class="token punctuation">[</span>index<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">cloneVNode</span><span class="token punctuation">(</span>vnode<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">const</span> elm <span class="token operator">=</span> <span class="token punctuation">(</span>vnode<span class="token punctuation">.</span>elm <span class="token operator">=</span> oldVnode<span class="token punctuation">.</span>elm<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u5C07 vnode.elm \u5F15\u7528\u5230\u771F\u5BE6 DOM\uFF0Celm \u4FEE\u6539\u6642\uFF0Cvnode.elm \u4E5F\u6703\u540C\u6B65\u8B8A\u5316</span>

  <span class="token comment">// \u7570\u6B65\u5360\u4F4D\u7B26</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isTrue</span><span class="token punctuation">(</span>oldVnode<span class="token punctuation">.</span>isAsyncPlaceholder<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isDef</span><span class="token punctuation">(</span>vnode<span class="token punctuation">.</span>asyncFactory<span class="token punctuation">.</span>resolved<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">hydrate</span><span class="token punctuation">(</span>oldVnode<span class="token punctuation">.</span>elm<span class="token punctuation">,</span> vnode<span class="token punctuation">,</span> insertedVnodeQueue<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      vnode<span class="token punctuation">.</span>isAsyncPlaceholder <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// \u91CD\u8907\u4F7F\u7528\u975C\u614B\u7684\u5143\u7D20\u3002</span>
  <span class="token comment">// \u6CE8\u610F\uFF0C\u50C5\u5728 vnode \u88AB\u514B\u9686\u6642\u624D\u57F7\u884C\u6B64\u64CD\u4F5C</span>
  <span class="token comment">// \u5982\u679C\u65B0\u7BC0\u9EDE\u6C92\u6709\u88AB\u514B\u9686\uFF0C\u5247\u8868\u793A\u6E32\u67D3\u51FD\u6578\u5DF2\u7D93\u88AB\u514B\u9686</span>
  <span class="token comment">// \u900F\u904E hot-reload-api \u91CD\u7F6E\uFF0C\u6211\u5011\u9700\u8981\u9032\u884C\u9069\u7576\u7684\u91CD\u65B0\u6E32\u67D3\u3002</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>
    <span class="token function">isTrue</span><span class="token punctuation">(</span>vnode<span class="token punctuation">.</span>isStatic<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span>
    <span class="token function">isTrue</span><span class="token punctuation">(</span>oldVnode<span class="token punctuation">.</span>isStatic<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span>
    vnode<span class="token punctuation">.</span>key <span class="token operator">===</span> oldVnode<span class="token punctuation">.</span>key <span class="token operator">&amp;&amp;</span>
    <span class="token punctuation">(</span><span class="token function">isTrue</span><span class="token punctuation">(</span>vnode<span class="token punctuation">.</span>isCloned<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token function">isTrue</span><span class="token punctuation">(</span>vnode<span class="token punctuation">.</span>isOnce<span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">)</span> <span class="token punctuation">{</span>
    vnode<span class="token punctuation">.</span>componentInstance <span class="token operator">=</span> oldVnode<span class="token punctuation">.</span>componentInstance<span class="token punctuation">;</span>
    <span class="token keyword">return</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">let</span> i<span class="token punctuation">;</span>
  <span class="token keyword">const</span> data <span class="token operator">=</span> vnode<span class="token punctuation">.</span>data<span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isDef</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token function">isDef</span><span class="token punctuation">(</span><span class="token punctuation">(</span>i <span class="token operator">=</span> data<span class="token punctuation">.</span>hook<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token function">isDef</span><span class="token punctuation">(</span><span class="token punctuation">(</span>i <span class="token operator">=</span> i<span class="token punctuation">.</span>prepatch<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">i</span><span class="token punctuation">(</span>oldVnode<span class="token punctuation">,</span> vnode<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">const</span> oldCh <span class="token operator">=</span> oldVnode<span class="token punctuation">.</span>children<span class="token punctuation">;</span>
  <span class="token keyword">const</span> ch <span class="token operator">=</span> vnode<span class="token punctuation">.</span>children<span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isDef</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token function">isPatchable</span><span class="token punctuation">(</span>vnode<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> cbs<span class="token punctuation">.</span>update<span class="token punctuation">.</span>length<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> cbs<span class="token punctuation">.</span>update<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">(</span>oldVnode<span class="token punctuation">,</span> vnode<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isDef</span><span class="token punctuation">(</span><span class="token punctuation">(</span>i <span class="token operator">=</span> data<span class="token punctuation">.</span>hook<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token function">isDef</span><span class="token punctuation">(</span><span class="token punctuation">(</span>i <span class="token operator">=</span> i<span class="token punctuation">.</span>update<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token function">i</span><span class="token punctuation">(</span>oldVnode<span class="token punctuation">,</span> vnode<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// \u5982\u679C vnode \u4E0D\u662F\u55AE\u7D14\u7684\u6587\u672C\u7BC0\u9EDE\u6216\u8005\u8A3B\u91CB\u7BC0\u9EDE\uFF0C\u5247\u9700\u8981\u5411\u4E0B\u6BD4\u8F03\u5B50\u7BC0\u9EDE\u5DEE\u7570\u4E26\u4EE5\u6B64\u66F4\u65B0\u5BE6\u9AD4\u8001\u7BC0\u9EDE\u3002</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isUndef</span><span class="token punctuation">(</span>vnode<span class="token punctuation">.</span>text<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u4E26\u4E14\u90FD\u5177\u6709\u5B50\u7BC0\u9EDE\u6642</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isDef</span><span class="token punctuation">(</span>oldCh<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token function">isDef</span><span class="token punctuation">(</span>ch<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u7576\u65B0\u820A\u5B50\u7BC0\u9EDE\u5217\u8868\u4E0D\u540C\u6642\uFF0C\u900F\u904E updateChildren \u9032\u884C\u65B0\u820A\u7BC0\u9EDE\u5217\u8868\u7684\u66F4\u65B0\u4EE5\u540C\u6B65\u5169\u8005\u3002</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>oldCh <span class="token operator">!==</span> ch<span class="token punctuation">)</span>
        <span class="token function">updateChildren</span><span class="token punctuation">(</span>elm<span class="token punctuation">,</span> oldCh<span class="token punctuation">,</span> ch<span class="token punctuation">,</span> insertedVnodeQueue<span class="token punctuation">,</span> removeOnly<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isDef</span><span class="token punctuation">(</span>ch<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u5982\u679C\u53EA\u6709\u65B0\u7684 vnode \u6709\u5B50\u7BC0\u9EDE</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isDef</span><span class="token punctuation">(</span>oldVnode<span class="token punctuation">.</span>text<span class="token punctuation">)</span><span class="token punctuation">)</span> nodeOps<span class="token punctuation">.</span><span class="token function">setTextContent</span><span class="token punctuation">(</span>elm<span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token comment">// elm \u5728\u4E0A\u65B9\u5DF2\u7D93\u5F15\u7528 oldVNode \u7684\u5BE6\u9AD4 DOM \u7BC0\u9EDE\uFF0C\u5728\u6B64\u66F4\u65B0 elm \u76F8\u7576\u65BC\u76F4\u63A5\u5728\u8001\u7BC0\u9EDE\u4E0A\u6DFB\u52A0 vnode \u7684 \u5B50\u7BC0\u9EDE</span>
      <span class="token function">addVnodes</span><span class="token punctuation">(</span>elm<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> ch<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> ch<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> insertedVnodeQueue<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isDef</span><span class="token punctuation">(</span>oldCh<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u5982\u679C\u53EA\u6709\u8001\u7BC0\u9EDE\u6709\u5B50\u7BC0\u9EDE\uFF0C\u65B0\u7684\u7BC0\u9EDE\u6C92\u6709\u5B50\u7BC0\u9EDE\uFF0C\u5247\u8981\u522A\u9664\u8001\u7684\u5B50\u7BC0\u9EDE</span>
      <span class="token function">removeVnodes</span><span class="token punctuation">(</span>oldCh<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> oldCh<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isDef</span><span class="token punctuation">(</span>oldVnode<span class="token punctuation">.</span>text<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u5982\u679C\u8001\u7BC0\u9EDE\u662F\u6587\u672C\u7BC0\u9EDE\uFF0C\u66F4\u65B0\u6587\u672C\u5167\u5BB9</span>
      nodeOps<span class="token punctuation">.</span><span class="token function">setTextContent</span><span class="token punctuation">(</span>elm<span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u5982\u679C oldVnode \u548C vnode \u662F\u6587\u672C\u7BC0\u9EDE\u6216\u8005\u8A3B\u91CB\u7BC0\u9EDE\uFF0C\u4E14 vnode.text != oldVnode.text \uFF0C\u66F4\u65B0\u6587\u672C\u5167\u5BB9\u81F3 DOM \u5373\u53EF\u3002</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>oldVnode<span class="token punctuation">.</span>text <span class="token operator">!==</span> vnode<span class="token punctuation">.</span>text<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    nodeOps<span class="token punctuation">.</span><span class="token function">setTextContent</span><span class="token punctuation">(</span>elm<span class="token punctuation">,</span> vnode<span class="token punctuation">.</span>text<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isDef</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isDef</span><span class="token punctuation">(</span><span class="token punctuation">(</span>i <span class="token operator">=</span> data<span class="token punctuation">.</span>hook<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token function">isDef</span><span class="token punctuation">(</span><span class="token punctuation">(</span>i <span class="token operator">=</span> i<span class="token punctuation">.</span>postpatch<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token function">i</span><span class="token punctuation">(</span>oldVnode<span class="token punctuation">,</span> vnode<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * updateChildren \u51FD\u6578\u4F5C\u7528\uFF1A\u5229\u7528\u65B0\u820A\u7BC0\u9EDE\u7684\u982D\u5C3E\u96D9\u6307\u91DD\uFF0C\u8655\u7406\u865B\u64EC DOM \u4E2D &quot;\u5B50\u7BC0\u9EDE&quot; \u7684\u66F4\u65B0\u3002\u5982 v-for \u7522\u751F\u7684\u5B50\u7BC0\u9EDE\u3002
 * updateChildren \u6D41\u7A0B\uFF1A(1) \u7576\u65B0\u820A\u7BC0\u9EDE\u7684\u982D\u6307\u91DD\u90FD\u9084\u6C92\u8D85\u8D8A\u5C3E\u6307\u91DD\uFF0C\u8FF4\u5708\u9032\u884C\u5B50\u7BC0\u9EDE\u6BD4\u8F03\u3002
 *                     (2) \u5148\u8B93 \u820A \u982D\u5C3E\u6307\u91DD\u5B9A\u9328\uFF0C\u627E\u4E0D\u5230\u982D\u5C3E\u6307\u91DD\u5C31\u6301\u7E8C\u63A8\u9032\u76F4\u5230\u627E\u5230\u5169\u8005\u3002
 *                     (3) \u65B0\u820A&quot;\u982D&quot;\u6307\u91DD\u5C0D\u61C9\u7BC0\u9EDE\u662F\u76F8\u540C\u7BC0\u9EDE\uFF0C\u57F7\u884C patchVnode \u6AA2\u67E5\u5169\u9EDE\uFF0C\u4E26\u5C07\u5169\u8005\u6307\u91DD\u5411\u4E2D\u9593\u63A8\u9032\u3002
 *                     (4) \u65B0\u820A&quot;\u5C3E&quot;\u6307\u91DD\u5C0D\u61C9\u7BC0\u9EDE\u662F\u76F8\u540C\u7BC0\u9EDE\uFF0C\u57F7\u884C patchVnode \u6AA2\u67E5\u5169\u9EDE\uFF0C\u4E26\u5C07\u5169\u8005\u6307\u91DD\u5411\u4E2D\u9593\u63A8\u9032\u3002
 *                     (5) \u820A\u982D\u6307\u91DD = \u65B0\u5C3E\u6307\u91DD\uFF0C\u57F7\u884C patchVnode \u6AA2\u67E5\u5169\u9EDE\uFF0C\u4E26\u5C07\u5169\u8005\u6307\u91DD\u5411\u4E2D\u9593\u63A8\u9032\u3002
 *                     (6) \u820A\u5C3E\u6307\u91DD = \u6307\u91DD\u65B0\u982D\uFF0C\u57F7\u884C patchVnode \u6AA2\u67E5\u5169\u9EDE\uFF0C\u4E26\u5C07\u5169\u8005\u6307\u91DD\u5411\u4E2D\u9593\u63A8\u9032\u3002
 *                     (7) \u90FD\u4E0D\u662F\u4E0A\u8FF0\u60C5\u6CC1\uFF0C\u958B\u59CB\u770B\u80FD\u4E0D\u80FD\u627E\u5230 oldCh \u4E4B\u4E2D\u548C \u7576\u524D \u65B0\u982D\u6307\u91DD\u7BC0\u9EDE \u76F8\u540C key \u7684\u7BC0\u9EDE
 *                        (7-1) \u627E\u4E0D\u5230\uFF0C\u5247\u5148\u65B0\u589E\u4E00\u500B\u7BC0\u9EDE
 *                        (7-2) \u627E\u5F97\u5230\uFF0C\u4E14\u76F8\u540C\u7BC0\u9EDE
 *                        (7-3) \u627E\u5F97\u5230\uFF0C\u4F46\u4E0D\u540C\u7BC0\u9EDE\uFF0C\u5247\u5148\u65B0\u589E\u4E00\u500B\u7BC0\u9EDE
 *                        (7-4) \u4E0D\u8AD6\u4E0A\u8DEF\u7D50\u679C\uFF0C\u6700\u5F8C \u65B0\u982D\u6307\u91DD \u7686\u5411\u53F3\u63A8\u9032
 *                     (8) \u81F3\u6B64\u8FF4\u5708\u5DF2\u7D93\u7D50\u675F\uFF0C\u5982\u679C\u820A\u7684\u982D\u6307\u91DD \u8D85\u904E \u820A\u7684 \u5C3E\u6307\u91DD\uFF0C\u4EE3\u8868 \u65B0\u7BC0\u9EDE \u6BD4 \u820A\u7BC0\u9EDE \u591A\uFF0C\u6240\u4EE5\u9700\u8981 \u65B0\u589E\u7BC0\u9EDE\u3002
 *                                        \u53CD\u4E4B\uFF0C\u4EE3\u8868\u820A\u7BC0\u9EDE \u6BD4 \u65B0\u7BC0\u9EDE\u591A\uFF0C\u4EE3\u8868\u9032\u884C \u522A\u9664\u7BC0\u9EDE \u52D5\u4F5C\u3002
 */</span>

<span class="token keyword">function</span> <span class="token function">updateChildren</span><span class="token punctuation">(</span>
  <span class="token parameter">parentElm<span class="token punctuation">,</span>
  oldCh<span class="token punctuation">,</span>
  newCh<span class="token punctuation">,</span>
  insertedVnodeQueue<span class="token punctuation">,</span>
  removeOnly</span>
<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u65B0\u820A\u7BC0\u9EDE\u982D\u5C3E\u6307\u91DD</span>
  <span class="token keyword">let</span> oldStartIdx <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> newStartIdx <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> oldEndIdx <span class="token operator">=</span> oldCh<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> newEndIdx <span class="token operator">=</span> newCh<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token comment">// \u65B0\u820A\u6307\u91DD\u5C0D\u61C9\u7684\u7BC0\u9EDE</span>
  <span class="token keyword">let</span> oldStartVnode <span class="token operator">=</span> oldCh<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> oldEndVnode <span class="token operator">=</span> oldCh<span class="token punctuation">[</span>oldEndIdx<span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> newStartVnode <span class="token operator">=</span> newCh<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> newEndVnode <span class="token operator">=</span> newCh<span class="token punctuation">[</span>newEndIdx<span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> oldKeyToIdx<span class="token punctuation">,</span> idxInOld<span class="token punctuation">,</span> vnodeToMove<span class="token punctuation">,</span> refElm<span class="token punctuation">;</span>

  <span class="token comment">// removeOnly is a special flag used only by &lt;transition-group&gt;</span>
  <span class="token comment">// to ensure removed elements stay in correct relative positions</span>
  <span class="token comment">// during leaving transitions</span>
  <span class="token keyword">const</span> canMove <span class="token operator">=</span> <span class="token operator">!</span>removeOnly<span class="token punctuation">;</span> <span class="token comment">// canMove \u7684\u689D\u4EF6\uFF0C\u5982\u679C\u70BA\u771F\uFF0C\u5247\u8868\u793A\u5728\u66F4\u65B0\u904E\u7A0B\u4E2D\u53EF\u4EE5\u79FB\u52D5\u7BC0\u9EDE\u3002</span>

  <span class="token comment">// \u820A\u7684\u982D\u6307\u91DD &lt;= \u820A\u7684\u5C3E\u6307\u91DD</span>
  <span class="token comment">// \u7576 \u820A\u7684\u982D\u6307\u91DD \u8D85\u8D8A \u820A\u7684\u5C3E\u6307\u91DD or \u65B0\u7684\u982D\u6307\u91DD \u8D85\u8D8A \u65B0\u7684\u5C3E\u6307\u91DD\uFF0C\u8868\u793A diff \u6BD4\u8F03\u7D50\u675F\uFF0C\u8DF3\u51FA\u5FAA\u74B0</span>
  <span class="token keyword">while</span> <span class="token punctuation">(</span>oldStartIdx <span class="token operator">&lt;=</span> oldEndIdx <span class="token operator">&amp;&amp;</span> newStartIdx <span class="token operator">&lt;=</span> newEndIdx<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isUndef</span><span class="token punctuation">(</span>oldStartVnode<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u820A\u7BC0\u9EDE \u7B2C\u4E00\u500B child \u4E0D\u5B58\u5728, \u820A\u7BC0\u9EDE \u548C \u820A\u982D\u6307\u91DD \u90FD\u5411 \u53F3 \u79FB\u52D5\u4E00\u55AE\u4F4D</span>
      oldStartVnode <span class="token operator">=</span> oldCh<span class="token punctuation">[</span><span class="token operator">++</span>oldStartIdx<span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// Vnode has been moved left</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isUndef</span><span class="token punctuation">(</span>oldEndVnode<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u820A\u7BC0\u9EDE \u6700\u5F8C\u4E00\u500B child \u4E0D\u5B58\u5728, \u820A\u7BC0\u9EDE \u548C \u820A\u5C3E\u6307\u91DD\u90FD\u5411 \u5DE6 \u79FB\u52D5\u4E00\u55AE\u4F4D</span>
      oldEndVnode <span class="token operator">=</span> oldCh<span class="token punctuation">[</span><span class="token operator">--</span>oldEndIdx<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">sameVnode</span><span class="token punctuation">(</span>oldStartVnode<span class="token punctuation">,</span> newStartVnode<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u65B0\u820A &quot;\u982D&quot; \u7BC0\u9EDE\u662F\u540C\u4E00\u7BC0\u9EDE\uFF0CpatchVnode \u6BD4\u8F03\u5169\u7BC0\u9EDE\uFF0C\u63A5\u8457 \u65B0\u820A&quot;\u982D&quot;\u6307\u91DD \u540C\u6642\u5411 \u53F3 \u63A8\u9032</span>
      <span class="token function">patchVnode</span><span class="token punctuation">(</span>
        oldStartVnode<span class="token punctuation">,</span>
        newStartVnode<span class="token punctuation">,</span>
        insertedVnodeQueue<span class="token punctuation">,</span>
        newCh<span class="token punctuation">,</span>
        newStartIdx
      <span class="token punctuation">)</span><span class="token punctuation">;</span>
      oldStartVnode <span class="token operator">=</span> oldCh<span class="token punctuation">[</span><span class="token operator">++</span>oldStartIdx<span class="token punctuation">]</span><span class="token punctuation">;</span>
      newStartVnode <span class="token operator">=</span> newCh<span class="token punctuation">[</span><span class="token operator">++</span>newStartIdx<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">sameVnode</span><span class="token punctuation">(</span>oldEndVnode<span class="token punctuation">,</span> newEndVnode<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u65B0\u820A &quot;\u5C3E&quot; \u7BC0\u9EDE\u662F\u540C\u4E00\u7BC0\u9EDE\uFF0CpatchVnode \u6BD4\u8F03\u5169\u7BC0\u9EDE\uFF0C\u63A5\u8457 \u65B0\u820A&quot;\u5C3E&quot;\u6307\u91DD \u540C\u6642\u5411 \u53F3 \u63A8\u9032</span>
      <span class="token function">test</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token function">patchVnode</span><span class="token punctuation">(</span>
        oldEndVnode<span class="token punctuation">,</span>
        newEndVnode<span class="token punctuation">,</span>
        insertedVnodeQueue<span class="token punctuation">,</span>
        newCh<span class="token punctuation">,</span>
        newEndIdx
      <span class="token punctuation">)</span><span class="token punctuation">;</span>
      oldEndVnode <span class="token operator">=</span> oldCh<span class="token punctuation">[</span><span class="token operator">--</span>oldEndIdx<span class="token punctuation">]</span><span class="token punctuation">;</span>
      newEndVnode <span class="token operator">=</span> newCh<span class="token punctuation">[</span><span class="token operator">--</span>newEndIdx<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">sameVnode</span><span class="token punctuation">(</span>oldStartVnode<span class="token punctuation">,</span> newEndVnode<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u820A\u982D\u7BC0\u9EDE == \u65B0\u5C3E\u7BC0\u9EDE\uFF0CpatchVnode \u6BD4\u8F03\u5169\u7BC0\u9EDE\uFF0C \u982D\u820A\u7BC0\u9EDE \u5411 \u2192 \u63A8\u9032\uFF0C\u5C3E\u65B0\u7BC0\u9EDE\u5411 \u2190 \u63A8\u9032\uFF0C\u5206\u5225\u63A8\u9032\u982D\u5C3E</span>
      <span class="token comment">// Vnode moved right</span>
      <span class="token function">patchVnode</span><span class="token punctuation">(</span>
        oldStartVnode<span class="token punctuation">,</span>
        newEndVnode<span class="token punctuation">,</span>
        insertedVnodeQueue<span class="token punctuation">,</span>
        newCh<span class="token punctuation">,</span>
        newEndIdx
      <span class="token punctuation">)</span><span class="token punctuation">;</span>
      canMove <span class="token operator">&amp;&amp;</span>
        nodeOps<span class="token punctuation">.</span><span class="token function">insertBefore</span><span class="token punctuation">(</span>
          parentElm<span class="token punctuation">,</span>
          oldStartVnode<span class="token punctuation">.</span>elm<span class="token punctuation">,</span>
          nodeOps<span class="token punctuation">.</span><span class="token function">nextSibling</span><span class="token punctuation">(</span>oldEndVnode<span class="token punctuation">.</span>elm<span class="token punctuation">)</span>
        <span class="token punctuation">)</span><span class="token punctuation">;</span>
      oldStartVnode <span class="token operator">=</span> oldCh<span class="token punctuation">[</span><span class="token operator">++</span>oldStartIdx<span class="token punctuation">]</span><span class="token punctuation">;</span>
      newEndVnode <span class="token operator">=</span> newCh<span class="token punctuation">[</span><span class="token operator">--</span>newEndIdx<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">sameVnode</span><span class="token punctuation">(</span>oldEndVnode<span class="token punctuation">,</span> newStartVnode<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u820A\u5C3E\u7BC0\u9EDE == \u65B0\u982D\u7BC0\u9EDE\uFF0CpatchVnode \u6BD4\u8F03\u5169\u7BC0\u9EDE\uFF0C \u5C3E\u820A\u7BC0\u9EDE \u5411 \u2190 \u63A8\u9032\uFF0C\u982D\u65B0\u7BC0\u9EDE\u5411 \u2192 \u63A8\u9032\uFF0C\u5206\u5225\u63A8\u9032\u5C3E\u982D</span>
      <span class="token comment">// Vnode moved left</span>
      <span class="token function">patchVnode</span><span class="token punctuation">(</span>
        oldEndVnode<span class="token punctuation">,</span>
        newStartVnode<span class="token punctuation">,</span>
        insertedVnodeQueue<span class="token punctuation">,</span>
        newCh<span class="token punctuation">,</span>
        newStartIdx
      <span class="token punctuation">)</span><span class="token punctuation">;</span>
      canMove <span class="token operator">&amp;&amp;</span>
        nodeOps<span class="token punctuation">.</span><span class="token function">insertBefore</span><span class="token punctuation">(</span>parentElm<span class="token punctuation">,</span> oldEndVnode<span class="token punctuation">.</span>elm<span class="token punctuation">,</span> oldStartVnode<span class="token punctuation">.</span>elm<span class="token punctuation">)</span><span class="token punctuation">;</span>
      oldEndVnode <span class="token operator">=</span> oldCh<span class="token punctuation">[</span><span class="token operator">--</span>oldEndIdx<span class="token punctuation">]</span><span class="token punctuation">;</span>
      newStartVnode <span class="token operator">=</span> newCh<span class="token punctuation">[</span><span class="token operator">++</span>newStartIdx<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u5982\u679C\u90FD\u4E0D\u80FD\u5339\u914D</span>
      <span class="token comment">// \u5728 oldChildren \u4E2D\u548C newStartVnode \u627E\u770B\u770B\u662F\u5426\u6709\u76F8\u540C key \u7684 Vnode</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isUndef</span><span class="token punctuation">(</span>oldKeyToIdx<span class="token punctuation">)</span><span class="token punctuation">)</span>
        oldKeyToIdx <span class="token operator">=</span> <span class="token function">createKeyToOldIdx</span><span class="token punctuation">(</span>oldCh<span class="token punctuation">,</span> oldStartIdx<span class="token punctuation">,</span> oldEndIdx<span class="token punctuation">)</span><span class="token punctuation">;</span>
      idxInOld <span class="token operator">=</span> <span class="token function">isDef</span><span class="token punctuation">(</span>newStartVnode<span class="token punctuation">.</span>key<span class="token punctuation">)</span>
        <span class="token operator">?</span> oldKeyToIdx<span class="token punctuation">[</span>newStartVnode<span class="token punctuation">.</span>key<span class="token punctuation">]</span>
        <span class="token operator">:</span> <span class="token function">findIdxInOld</span><span class="token punctuation">(</span>newStartVnode<span class="token punctuation">,</span> oldCh<span class="token punctuation">,</span> oldStartIdx<span class="token punctuation">,</span> oldEndIdx<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isUndef</span><span class="token punctuation">(</span>idxInOld<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u5982\u679C\u627E\u4E0D\u5230\u76F8\u540C key, \u4EE3\u8868 newStartVnode \u662F\u4E00\u500B\u65B0\u7BC0\u9EDE\uFF0C\u6240\u4EE5\u65B0\u589E\u4E00\u500B\u7BC0\u9EDE</span>
        <span class="token function">createElm</span><span class="token punctuation">(</span>
          newStartVnode<span class="token punctuation">,</span>
          insertedVnodeQueue<span class="token punctuation">,</span>
          parentElm<span class="token punctuation">,</span>
          oldStartVnode<span class="token punctuation">.</span>elm<span class="token punctuation">,</span>
          <span class="token boolean">false</span><span class="token punctuation">,</span>
          newCh<span class="token punctuation">,</span>
          newStartIdx
        <span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u5982\u679C\u627E\u5F97\u5230\u548C newStartVnode \u76F8\u540C key \u7684 Vnode\uFF0C\u53EBvnodeToMove\uFF0C</span>
        vnodeToMove <span class="token operator">=</span> oldCh<span class="token punctuation">[</span>idxInOld<span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// \u628A vnodeToMove \u8B8A\u6210 oldCh \u4E2D\u8207 newStartVnode \u76F8\u5C0D\u61C9 key \u7684\u7BC0\u9EDE</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">sameVnode</span><span class="token punctuation">(</span>vnodeToMove<span class="token punctuation">,</span> newStartVnode<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token comment">// \u5982\u679C\u5169\u500B key \u76F8\u540C\u7684\u7BC0\u9EDE\u662F\u540C\u4E00\u500B\u7BC0\u9EDE</span>
          <span class="token function">patchVnode</span><span class="token punctuation">(</span>
            vnodeToMove<span class="token punctuation">,</span>
            newStartVnode<span class="token punctuation">,</span>
            insertedVnodeQueue<span class="token punctuation">,</span>
            newCh<span class="token punctuation">,</span>
            newStartIdx
          <span class="token punctuation">)</span><span class="token punctuation">;</span>
          oldCh<span class="token punctuation">[</span>idxInOld<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span> <span class="token comment">// \u76F8\u7576\u65BC\u6A19\u8A18\u5DF2\u7D93\u8655\u7406\u904E\u7684\u820AVNode\uFF0C(\u56E0\u7232\u5DF2\u7D93\u5339\u914D\u904E \u4E0B\u6B21\u5230\u6B64\u7BC0\u9EDE\u4E5F\u5C31\u4E0D\u7528\u5339\u914D\uFF0C\u7528\u65BC\u512A\u5316 diff \u7B97\u6CD5\u6548\u7387)</span>
          canMove <span class="token operator">&amp;&amp;</span>
            nodeOps<span class="token punctuation">.</span><span class="token function">insertBefore</span><span class="token punctuation">(</span>parentElm<span class="token punctuation">,</span> vnodeToMove<span class="token punctuation">.</span>elm<span class="token punctuation">,</span> oldStartVnode<span class="token punctuation">.</span>elm<span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token comment">// \u5C07 vnodeToMove.elm\uFF08\u5373\u627E\u5230\u76F8\u540C key \u7684 \u820A\u7684DOM\u5143\u7D20\uFF09\u63D2\u5165\u5230 oldStartVnode.elm\uFF08\u5373\u539F\u4F86\u5728\u820A\u7BC0\u9EDE oldStartIdx \u4F4D\u7F6E\uFF09\u7684\u524D\u9762\u3002</span>
          <span class="token comment">// !!! \u7B49\u540C\u65BC\u5C07\u8A72\u76F8\u540C key \u820A\u5143\u7D20\uFF0C \u4E1F\u5230\u7576\u524D\u820A\u982D\u6307\u91DD\u7684\u4F4D\u7F6E\u4E4B\u524D (oldStartIdx - 1)\u3002(\u8981\u548C\u65B0\u982D\u6307\u91DD\u4F4D\u7F6E\u5C0D\u61C9\uFF0C\u53C8\u4E0D\u5F71\u97FF\u820A\u982D\u6307\u91DD\u4F4D\u7F6E\uFF0C\u6240\u4EE5 - 1)</span>
          <span class="token comment">// \u65E2\u4E0D\u6703\u5F71\u97FF \u820A\u982D\u6307\u91DD \u904B\u884C\uFF0C\u4E5F\u5B8C\u6210\u4E86\u5C0D\u65BC\u8A72\u7BC0\u9EDE\u7684\u66F4\u65B0\u548C\u79FB\u52D5\u3002</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
          <span class="token comment">// key \u76F8\u540C\uFF0C\u4F46\u7BC0\u9EDE\u4E0D\u76F8\u540C\uFF0C\u5247\u5EFA\u7ACB\u4E00\u500B\u65B0\u7BC0\u9EDE\u653E\u5230 newStartIdx \u4F4D\u7F6E</span>
          <span class="token function">createElm</span><span class="token punctuation">(</span>
            newStartVnode<span class="token punctuation">,</span>
            insertedVnodeQueue<span class="token punctuation">,</span>
            parentElm<span class="token punctuation">,</span>
            oldStartVnode<span class="token punctuation">.</span>elm<span class="token punctuation">,</span>
            <span class="token boolean">false</span><span class="token punctuation">,</span>
            newCh<span class="token punctuation">,</span>
            newStartIdx
          <span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// p.s.: \u4E0D\u8A2D key\uFF0CnewCh \u548C oldCh \u53EA\u9032\u884C\u982D\u5C3E\u5169\u7AEF\u7684\u6BD4\u8F03\uFF0C\u8A2D key \u5F8C\uFF0C\u9084\u6703\u5F9E \u7528 key \u751F\u6210\u7684\u5C0D\u8C61 oldKeyToIdx \u4E2D\u67E5\u8A62\u5339\u914D\u7684\u7BC0\u9EDE\uFF0C</span>
        <span class="token comment">// \u6240\u4EE5\u66FF\u7BC0\u9EDE\u8A2D\u7F6E key \u53EF\u4EE5\u66F4\u9AD8\u6548\u7684\u5229\u7528 DOM\u3002</span>
      <span class="token punctuation">}</span>
      newStartVnode <span class="token operator">=</span> newCh<span class="token punctuation">[</span><span class="token operator">++</span>newStartIdx<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// \u5982\u679C\u820A\u7684\u982D\u6307\u91DD \u8D85\u904E \u820A\u7684 \u5C3E\u6307\u91DD\uFF0C\u4EE3\u8868 \u65B0\u7BC0\u9EDE \u6BD4 \u820A\u7BC0\u9EDE \u591A\uFF0C\u6240\u4EE5\u9700\u8981 \u65B0\u589E\u7BC0\u9EDE</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>oldStartIdx <span class="token operator">&gt;</span> oldEndIdx<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    refElm <span class="token operator">=</span> <span class="token function">isUndef</span><span class="token punctuation">(</span>newCh<span class="token punctuation">[</span>newEndIdx <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token keyword">null</span> <span class="token operator">:</span> newCh<span class="token punctuation">[</span>newEndIdx <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>elm<span class="token punctuation">;</span>
    <span class="token function">addVnodes</span><span class="token punctuation">(</span>
      parentElm<span class="token punctuation">,</span>
      refElm<span class="token punctuation">,</span>
      newCh<span class="token punctuation">,</span>
      newStartIdx<span class="token punctuation">,</span>
      newEndIdx<span class="token punctuation">,</span>
      insertedVnodeQueue
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>newStartIdx <span class="token operator">&gt;</span> newEndIdx<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u53CD\u4E4B\uFF0C\u4EE3\u8868\u820A\u7BC0\u9EDE \u6BD4 \u65B0\u7BC0\u9EDE\u591A\uFF0C\u9032\u884C \u522A\u9664\u7BC0\u9EDE \u52D5\u4F5C</span>
    <span class="token function">removeVnodes</span><span class="token punctuation">(</span>oldCh<span class="token punctuation">,</span> oldStartIdx<span class="token punctuation">,</span> oldEndIdx<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><h3 id="\u5FC3\u5F97" tabindex="-1"><a class="header-anchor" href="#\u5FC3\u5F97" aria-hidden="true">#</a> \u5FC3\u5F97</h3><p>\u5728\u770B\u904E\u539F\u59CB\u78BC\u77E5\u9053\u5BE6\u73FE\u908F\u8F2F\u5F8C\uFF0C\u7E3D\u7B97\u80FD\u660E\u767D\u6BCF\u500B\u968E\u6BB5\u6240\u505A\u7684\u4E8B\u60C5\uFF0C \u8D8A\u662F\u4E00\u6B65\u6B65\u62C6\u89E3\u9019\u4E9B\u51FD\u6578\uFF0C\u8D8A\u80FD\u9AD4\u6703\u5230\u958B\u6E90\u8005\u7684\u601D\u7DAD\u7D30\u81A9\u7A0B\u5EA6\u3002 \u50CF\u662F\u6BD4\u8F03\u7684\u539F\u5247\uFF0C\u6392\u5E8F\u7684\u65B9\u5F0F\uFF0C\u6A39\u7684\u904D\u6B77\u9806\u5E8F\uFF0C\u5982\u4F55\u6574\u5408 SSR \u7B49\u7B49\uFF0C \u6216\u8A31\u958B\u6E90\u8005\u7684\u8FFD\u6C42\u5C0D\u65BC\u5927\u90E8\u5206\u5546\u7528\u7522\u54C1\u7684\u4E16\u754C\u4F86\u8AAA\u6709\u9EDE\u904E\u65BC\u908A\u969B\u6548\u61C9\uFF0C \u4F46\u5C0D\u958B\u767C\u8005\u800C\u8A00\uFF0C\u5F9E\u4E2D\u5B78\u5230\u7684\u601D\u8003\u6A21\u5F0F\uFF0C\u53CD\u800C\u66F4\u80FD\u53CD\u601D\u81EA\u5DF1\u958B\u767C\u7522\u54C1\u7684\u6D41\u7A0B\u548C\u65B9\u5F0F\u662F\u5426\u4E0D\u5920\u56B4\u8B39\uFF0C \u4E5F\u5C0D\u65BC\u524D\u7AEF\u61C9\u7528\u7684\u6F14\u7B97\u6CD5\u8DDF\u7279\u6027\u6709\u66F4\u6DF1\u7684\u8A8D\u8B58\u3002</p>`,8);function V(w,y){const a=c("font");return u(),l("div",null,[i,s("ul",null,[s("li",null,[s("p",null,[n("diff \u6F14\u7B97\u6CD5\u662F\u4E00\u7A2E"),t(a,{color:"#74b3eb"},{default:p(()=>[n("\u900F\u904E\u540C\u5C64\u7684\u6A39\u7BC0\u9EDE\u9032\u884C\u6BD4\u8F03")]),_:1}),n("\u7684\u9AD8\u6548\u80FD\u6F14\u7B97\u6CD5\u3002")])]),s("li",null,[s("p",null,[n("diff \u6F14\u7B97\u6CD5\u4F5C\u7528\u65BC"),t(a,{color:"#74b3eb"},{default:p(()=>[n("\u865B\u64EC dom \u6E32\u67D3\u6210\u771F\u5BE6 dom \u7684\u65B0\u820A VNode \u7BC0\u9EDE\u6BD4\u8F03")]),_:1}),n("\u3002")])]),d,s("li",null,[r,s("ol",null,[s("li",null,[t(a,{color:"#74b3eb"},{default:p(()=>[n("\u53EA\u6703\u5728\u540C\u5C64\u7D1A\u9032\u884C, \u4E0D\u6703\u8DE8\u5C64\u7D1A\u6BD4\u8F03")]),_:1}),n("\u3002 ")]),s("li",null,[t(a,{color:"#74b3eb"},{default:p(()=>[n("\u5728 diff \u6BD4\u8F03\u7684\u904E\u7A0B\u4E2D\uFF0C\u5FAA\u74B0\u5F9E\u5169\u908A\u5411\u4E2D\u9593\u6BD4\u8F03\u3002 (\u96D9\u6307\u91DD)")]),_:1})])])])]),m,f,s("p",null,[n("\u7B2C\u4E00\u5C64 patch\uFF1A patch \u51FD\u6578\u6703\u627E\u51FA\u65B0\u820A\u7BC0\u9EDE\u5DEE\u7570\uFF0C"),t(a,{color:"#74b3eb"},{default:p(()=>[n("\u4E3B\u8981\u5224\u65B7\u7BC0\u9EDE\u5B58\u5728\u8207\u5426\u3001\u662F\u5426\u7686\u70BA\u865B\u64EC\u7BC0\u9EDE\uFF0C\u4EE5\u53CA\u820A\u7BC0\u9EDE\u662F\u5426\u70BA\u5BE6\u9AD4 DOM\u3002")]),_:1}),n(" \u82E5\u65B0\u820A\u7BC0\u9EDE\u7686\u70BA\u865B\u64EC\u7BC0\u9EDE\uFF0C\u5247\u4F7F\u7528 patchVnode \u51FD\u6578\u5411\u4E0B\u6BD4\u8F03\u5B50\u7BC0\u9EDE\u5DEE\u7570\u3002")]),s("p",null,[n("\u7B2C\u4E8C\u5C64 patchVnode\uFF1A "),t(a,{color:"#74b3eb"},{default:p(()=>[n("\u5224\u65B7\u65B0\u820A\u865B\u64EC\u7BC0\u9EDE\u662F\u5C6C\u65BC\u55AE\u7D14\u6587\u672C\u9084\u662F\u66F4\u6DF1\u7684\u5B50\u7BC0\u9EDE\u6A39")]),_:1}),n("\uFF0C\u90FD\u662F\u6587\u672C\u5247\u55AE\u7D14\u66F4\u65B0\u6587\u672C\uFF0C"),t(a,{color:"#74b3eb"},{default:p(()=>[n("\u540C\u985E\u578B\u975E\u6587\u672C\u5247\u4F9D\u7167\u65B0\u820A\u7BC0\u9EDE\u5224\u65B7\u662F\u5426\u9700\u8981\u65B0\u589E\u6216\u522A\u9664\u4F86\u540C\u6B65\u6620\u5C04\u5230\u5BE6\u9AD4 DOM \u4E0A")]),_:1}),n("\u3002 \u7576\u65B0\u7684 VNode \u5217\u8868\u548C\u820A\u7684 VNode \u5217\u8868\u4E2D\u7684\u67D0\u4E9B VNode \u4E0D\u5339\u914D\u6642\uFF0C\u5247\u89F8\u767C updateChildren \u5354\u8ABF\u65B0\u820A\u5B50\u7BC0\u9EDE\u7684\u8B8A\u5316\u78BA\u4FDD\u865B\u64EC DOM \u8207\u5BE6\u969B DOM \u540C\u6B65\u3002")]),s("p",null,[n("\u7B2C\u4E09\u5C64 updateChildren\uFF1A "),t(a,{color:"#74b3eb"},{default:p(()=>[n("\u4E3B\u8981\u5C08\u6CE8\u65BC\u8655\u7406\u5169\u500B VNode \u5217\u8868\u4E4B\u9593\u7684\u8B8A\u5316\uFF0C\u5728\u91CD\u65B0\u6E32\u67D3\u6642\uFF0C\u5354\u8ABF\u4E26\u8655\u7406\u65B0\u820A\u5B50\u7BC0\u9EDE\u4E4B\u9593\u7684\u8B8A\u5316\uFF0C\u4EE5\u78BA\u4FDD\u865B\u64EC DOM \u8207\u5BE6\u969B DOM \u4FDD\u6301\u540C\u6B65\u4E14\u4E00\u81F4\u3002")]),_:1}),n(" \u8A72\u51FD\u6578\u6703\u904D\u6B77\u65B0\u7684 VNode \u5217\u8868\uFF0C\u4E26\u5617\u8A66\u5728\u820A\u7684 VNode \u5217\u8868\u4E2D\u627E\u5230\u5339\u914D\u7684 VNode\u3002 \u6703\u5148"),t(a,{color:"#74b3eb"},{default:p(()=>[n("\u5229\u7528\u982D\u5C3E\u6307\u91DD\u4F5C\u70BA\u6700\u4F73\u5316\u7684\u6BD4\u5C0D\u65B9\u5F0F")]),_:1}),n("\uFF0C\u540C\u6642\u4E5F\u4F5C\u70BA\u7BC0\u9EDE\u66F4\u65B0\u7684\u9328\u9EDE\uFF0C\u6703\u5C07\u65B0\u7684 VNode \u5217\u8868\u4E2D\u7684\u9806\u5E8F\u548C\u820A\u7684 VNode \u5217\u8868\u4E2D\u7684\u9806\u5E8F\u4E0D\u4E00\u81F4\u6642\u9032\u884C\u91CD\u6392\uFF0C\u78BA\u4FDD\u5143\u7D20\u5728 DOM \u4E2D\u7684\u9806\u5E8F\u6B63\u78BA\u3002"),t(a,{color:"#74b3eb"},{default:p(()=>[n("\u4E5F\u5C0D\u6BCF\u500B\u76F8\u540C\u4F4D\u7F6E\u7684\u7BC0\u9EDE\u5247\u9032\u884C patchVnode, \u4EE5\u6B64\u904D\u6B77\u6574\u68F5\u5B50\u6A39\u7684\u7BC0\u9EDE\u9032\u884C\u6BD4\u5C0D\uFF0C\u78BA\u4FDD\u865B\u64EC DOM \u4E2D\u76F8\u61C9\u7684\u5143\u7D20\u80FD\u5920\u88AB\u6B63\u78BA\u66F4\u65B0\u3002")]),_:1}),n("\u540C\u6642\u4E5F\u6703\u8655\u7406 \u65B0\u589E\u7684 VNode \u548C\u88AB\u522A\u9664\u7684 VNode\u3002\u5C0D\u65BC\u65B0\u589E\u7684 VNode\uFF0C\u6703\u9032\u884C\u5275\u5EFA\u548C\u63D2\u5165\u64CD\u4F5C\uFF1B\u5C0D\u65BC\u88AB\u522A\u9664\u7684 VNode\uFF0C\u6703\u9032\u884C\u79FB\u9664\u64CD\u4F5C\u3002")]),h])}var D=e(k,[["render",V],["__file","index.html.vue"]]);export{D as default};
